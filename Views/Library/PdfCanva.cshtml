@model PDFUpload.Models.Book
@using System.Web.Helpers;
@{
    ViewData["Title"] = "PdfCanva";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="//mozilla.github.io/pdf.js/build/pdf.js"></script>
<h1>PdfCanva</h1>

@* novo *@
<div id="my_pdf_viewer">
    <div id="canvas_container">
        <canvas id="pdf_renderer"></canvas>
    </div>

    <div id="navigation_controls">
        <button id="go_previous">Previous</button>
        <input id="current_page" value="1" type="number" />
        <button id="go_next">Next</button>
    </div>
    <div id="zoom_controls">
        <button id="zoom_in">+</button>
        <button id="zoom_out">-</button>
    </div>
</div>
@* novo *@


@*<canvas id="my_canvas"></canvas>*@
<canvas id="the-canvas"></canvas>






@*<base href="https://mozilla.github.io">*@

@section scripts
{
    @*<script src="//mozilla.github.io/pdf.js/build/pdf.js"></script>*@

    @*<script src="https://cdn.jsdelivr.net/npm/pdfjs-dist@2.5.207/build/pdf.min.js"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.0.943/pdf.min.js"></script>


    <script>
        var myState = {
            pdf: null,
            currentPage: 1,
            zoom: 1
        }

        // more code here
    </script>





    <script type="text/javascript">


        @*var model = @Html.Raw(Json.Encode(Model));
        var ByteBook = @Html.Raw(Json.Encode(Model.ByteBook));*@

        var modelJSValue = '@Model.ByteBook';

        var pdfFile = pdfjsLib.getDocument("../hello2.pdf").then((pdf) => {
            console.log('hey')
                myState.pdf = pdf;
    render();
    // more code here

    });



    function render() {
    myState.pdf.getPage(myState.currentPage).then((page) => {

    // more code here

    });
    }

    //var canvas = document.getElementById("pdf_renderer");
    //var ctx = canvas.getContext('2d');

    ////var viewport = page.getViewport(myState.zoom);

    //canvas.width = viewport.width;
    //canvas.height = viewport.height;

    //page.render({
    //canvasContext: ctx,
    //viewport: viewport
    //});











    @*//var canvasContainer = document.getElementById('the-canvas');
        //function loadPDFJS(pid, pageUrl) {

        //    //PDFJS.workerSrc = 'pdfjs/build/pdf.worker.js';
        //    pdfjsLib.GlobalWorkerOptions.workerSrc = '//mozilla.github.io/pdf.js/build/pdf.worker.js';


        //    var currentPage = 1;
        //    var pages = [];
        //    var url = '../hello2.pdf';

        //    PDFJS.getDocument(url).then(function (pdf) {
        //        pdf.getPage(currentPage).then(renderPage);

        //        function renderPage(page) {
        //            var height = 700;
        //            var viewport = page.getViewport(1);
        //            var scale = height / viewport.height;
        //            var scaledViewport = page.getViewport(scale);

        //            var canvas = document.createElement('canvas');
        //            var context = canvas.getContext('2d');
        //            canvas.height = scaledViewport.height;
        //            canvas.width = scaledViewport.width;

        //            var renderContext = {
        //                canvasContext: context,
        //                viewport: scaledViewport
        //            };
        //            page.render(renderContext).then(function () {
        //                if (currentPage < pdf.numPages) {
        //                    pages[currentPage] = canvas;
        //                    currentPage++;
        //                    pdf.getPage(currentPage).then(renderPage);
        //                } else {
        //                    for (var i = 1; i < pages.length; i++) {
        //                        document.getElementById('the-canvas').appendChild(pages[i]);
        //                    }
        //                }
        //            });
        //        }

        //    });
        //}*@


    @*//////////////////////////////////////////////////////////////////////////////
        ////<script type="text/javascript">
        //// If absolute URL from the remote server is provided, configure the CORS
        //// header on that server.
        ////var url = 'https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/examples/learning/helloworld.pdf';
        ////var url = './hello2.pdf';
        //var url = 'file:///C:/Users/User/Desktop/IBORN/Dimitar%20Chukovski%20Dogovor%20za%20praksa-%20vtor%20mesec..pdf';


        //// Loaded via <script> tag, create shortcut to access PDF.js exports.
        //var pdfjsLib = window['pdfjs-dist/build/pdf'];

        //// The workerSrc property shall be specified.
        //pdfjsLib.GlobalWorkerOptions.workerSrc = '//mozilla.github.io/pdf.js/build/pdf.worker.js';

        //// Asynchronous download of PDF
        //var loadingTask = pdfjsLib.getDocument(url);
        //loadingTask.promise.then(function (pdf) {
        //    console.log('PDF loaded');

        //    // Fetch the first page
        //    var pageNumber = 1;
        //    pdf.getPage(pageNumber).then(function (page) {
        //        console.log('Page loaded');

        //        var scale = 1.5;
        //        var viewport = page.getViewport({ scale: scale });

        //        // Prepare canvas using PDF page dimensions
        //        var canvas = document.getElementById('the-canvas');
        //        var context = canvas.getContext('2d');
        //        canvas.height = viewport.height;
        //        canvas.width = viewport.width;

        //        // Render PDF page into canvas context
        //        var renderContext = {
        //            canvasContext: context,
        //            viewport: viewport
        //        };
        //        var renderTask = page.render(renderContext);
        //        renderTask.promise.then(function () {
        //            console.log('Page rendered');
        //        });
        //    });
        //}, function (reason) {
        //    // PDF loading error
        //    console.error(reason);
        //});
        /////////////////////////////////////////////////////////////////



                        //const PDFStart = () => {
                        //console.log("hey");
                        //pdfjsLib.getDocument('../../book/hello2.pdf')
                        //    .then(doc => {
                        //        console.log("This file has " + doc._pdfInfo.numPages + " pages");
                        //    });
                        //}
                        ///////////////////////////////////////
                        ///////////////////////////////////////
                        //(async () => {

                        //    const loadingTask = pdfjsLib.getDocument("../book/hello2.pdf");
                        //    const pdf = await loadingTask.promise;

                        //    const page = await pdf.getPage(1);

                        //    const scale = 1;
                        //    const viewport = page.getViewport(scale);
                        //    const canvas = document.getElementById("my_canvas");
                        //    const context = canvas.getContext("2d");
                        //    canvas.height = viewport.height;
                        //    canvas.width = viewport.width;
                        //    const renderContext = {
                        //        canvasContext: context,
                        //        viewport: viewport
                        //    };
                        //    await page.render(renderContext);
                        //    console.log("Page rendered!");
                        //})();
                        ///////////////////////////////////////
                        ///////////////////////////////////////






                        ///////////////////////////////////////
                        ///////////////////////////////////////

                        //pdfjsLib.getDocument('hello2.pdf')

                        //var loadingTask = pdfjsLib.getDocument('hello2.pdf');
                        //loadingTask.promise.then(function (pdf) {
                        //    console.log("hey")

                        //    // you can now use *pdf* here
                        //    pdf.getPage(1).then(function (page) {

                        //        var scale = 1.5;
                        //        var viewport = page.getViewport({ scale: scale, });

                        //        var canvas = document.getElementById('my_canvas');
                        //        var context = canvas.getContext('2d');
                        //        canvas.height = viewport.height;
                        //        canvas.width = viewport.width;

                        //        var renderContext = {
                        //            canvasContext: context,
                        //            viewport: viewport
                        //        };
                        //        page.render(renderContext);
                        //        // you can now use *page* here
                        //    });

                        //});
                        ///////////////////////////////////////
                        ///////////////////////////////////////




                        /////////////////////////////////////////////////////
                        /////////////////////////////////////////////////////
                        // If absolute URL from the remote server is provided, configure the CORS
                        // header on that server.
                        //
                        //var url = './hello2.pdf';

                        ////
                        //// The workerSrc property shall be specified.
                        ////
                        //pdfjsLib.GlobalWorkerOptions.workerSrc =
                        //    '../../node_modules/pdfjs-dist/build/pdf.worker.js';

                        ////
                        //// Asynchronous download PDF
                        ////
                        //var loadingTask = pdfjsLib.getDocument(url);
                        //loadingTask.promise.then(function (pdf) {
                        //    //
                        //    // Fetch the first page
                        //    //
                        //    pdf.getPage(1).then(function (page) {
                        //        var scale = 1.5;
                        //        var viewport = page.getViewport({ scale: scale, });

                        //        //
                        //        // Prepare canvas using PDF page dimensions
                        //        //
                        //        var canvas = document.getElementById('my_canvas');
                        //        var context = canvas.getContext('2d');
                        //        canvas.height = viewport.height;
                        //        canvas.width = viewport.width;

                        //        //
                        //        // Render PDF page into canvas context
                        //        //
                        //        var renderContext = {
                        //            canvasContext: context,
                        //            viewport: viewport,
                        //        };
                        //        page.render(renderContext);
                        //    });
                        //});

                        /////////////////////////////////////////////////////
                        /////////////////////////////////////////////////////*@







    </script>
}


